# Generated by Django 3.0.6 on 2020-05-30 07:12

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_rule', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Notiication Policy',
                'verbose_name_plural': 'Notification Policies',
            },
        ),
        migrations.CreateModel(
            name='RedisPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=50)),
                ('plan_name', models.CharField(max_length=50)),
                ('mem_limit', models.FloatField(default=10)),
                ('conn_limit', models.IntegerField(default=1)),
                ('cost', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Redis Plan',
                'verbose_name_plural': 'Redis Plans',
            },
        ),
        migrations.CreateModel(
            name='RedisSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('redis_name', models.CharField(max_length=256, unique=True)),
                ('app_name', models.CharField(max_length=256)),
                ('redis_heroku_name', models.CharField(max_length=256)),
                ('metric_rate', models.CharField(choices=[('30 sec', '30 sec'), ('1 min', '1 min'), ('5 min', '5 min')], default='1 min', max_length=16)),
                ('enable_scaling', models.BooleanField(blank=True, default=False, null=True)),
                ('scaling_rate', models.CharField(choices=[('1 min', '1 min'), ('5 min', '5 min'), ('10 min', '10 min')], default='5 min', max_length=16)),
                ('avg_connection_percent', models.IntegerField(default=80)),
                ('avg_memory_percent', models.IntegerField(default=80)),
                ('current_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logs.RedisPlan')),
                ('max_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='max_plan', to='logs.RedisPlan')),
                ('min_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='min_plan', to='logs.RedisPlan')),
                ('notification_policies', models.ManyToManyField(blank=True, default=None, null=True, to='logs.NotificationPolicy')),
            ],
            options={
                'verbose_name': 'Redis Setting',
                'verbose_name_plural': 'Redis Settings',
            },
        ),
        migrations.CreateModel(
            name='RedisMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used_memory', models.BigIntegerField(blank=True, default=0, null=True)),
                ('n_connections', models.IntegerField(blank=True, default=0, null=True)),
                ('percentage_memory', models.FloatField(blank=True, null=True)),
                ('percentage_connections', models.FloatField(blank=True, null=True)),
                ('action_performed', models.CharField(choices=[('No Action', 'No Action'), ('Upgrade', 'Upgrade'), ('Downgrade', 'Downgrade')], default='No Action', max_length=32)),
                ('sts', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('existing_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logs.RedisPlan')),
                ('redis_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logs.RedisSetting')),
            ],
            options={
                'verbose_name': 'Redis Metric',
                'verbose_name_plural': 'Redis Metrics',
            },
        ),
    ]
